# GitHub Actions Workflow - 24/7 Data Sync (Zero-Cost)
# Draait automatisch zelfs als je laptop uit staat!
# GitHub Actions Free Tier: 2000 min/maand = ~66 min/dag
# Cost: €0 (public repo) of €0 tot 2000 min/maand (private repo met GitHub Pro)

name: 24/7 Data Sync

on:
  # Schedule: Cron expression (UTC tijdzone)
  schedule:
    # Forward scan: Daily at 04:00 UTC (05:00 CET / 06:00 CEST)
    - cron: '0 4 * * *'
    
  # Manual trigger via GitHub UI
  workflow_dispatch:
    inputs:
      maxEvents:
        description: 'Max events to scan (default: 1000)'
        required: false
        default: '1000'
      retentionDays:
        description: 'Retention days (default: 100)'
        required: false
        default: '100'

# Alleen 1 workflow tegelijk (voorkom dubbele syncs)
concurrency:
  group: data-sync
  cancel-in-progress: false

jobs:
  forward-scan:
    name: Forward Event Scan
    runs-on: ubuntu-latest
    
    # Timeout: Max 6 uur (GitHub Actions max = 6 uur)
    timeout-minutes: 360
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup environment
        run: |
          echo "DATABASE_URL=file:./prisma/github-actions.db" >> $GITHUB_ENV
          echo "ZWIFT_API_KEY=${{ secrets.ZWIFT_API_KEY }}" >> $GITHUB_ENV
          echo "ZWIFT_API_BASE_URL=https://zwift-ranking.herokuapp.com" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV
      
      - name: Restore database from artifact
        uses: actions/download-artifact@v4
        with:
          name: database
          path: prisma/
        continue-on-error: true
      
      - name: Generate Prisma client
        run: npm run db:generate
      
      - name: Run database migrations
        run: npm run db:migrate
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Forward event scan
        run: |
          MAX_EVENTS=${{ github.event.inputs.maxEvents || '1000' }}
          RETENTION_DAYS=${{ github.event.inputs.retentionDays || '100' }}
          
          echo "Starting forward scan..."
          echo "Max events: $MAX_EVENTS"
          echo "Retention: $RETENTION_DAYS days"
          
          npm run sync:forward -- --maxEvents=$MAX_EVENTS --retentionDays=$RETENTION_DAYS
        continue-on-error: true
      
      - name: Save database as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: database
          path: prisma/github-actions.db
          retention-days: 7
      
      - name: Report status
        if: always()
        run: |
          if [ -f prisma/github-actions.db ]; then
            echo "✅ Database updated successfully"
            sqlite3 prisma/github-actions.db "SELECT COUNT(*) as events FROM events WHERE deletedAt IS NULL;" || true
            sqlite3 prisma/github-actions.db "SELECT COUNT(*) as results FROM race_results;" || true
          else
            echo "⚠️ Database file not found"
          fi

  # Separate job voor favorite riders sync (sneller, meer frequent mogelijk)
  favorites-sync:
    name: Sync Favorite Riders
    runs-on: ubuntu-latest
    
    # Draai alleen als er een scheduled trigger is EN het is een sync moment
    # Schedule: Elke 6 uur (00:00, 06:00, 12:00, 18:00 UTC)
    if: github.event.schedule == '0 */6 * * *' || github.event_name == 'workflow_dispatch'
    
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup environment
        run: |
          echo "DATABASE_URL=file:./prisma/github-actions.db" >> $GITHUB_ENV
          echo "ZWIFT_API_KEY=${{ secrets.ZWIFT_API_KEY }}" >> $GITHUB_ENV
          echo "ZWIFT_API_BASE_URL=https://zwift-ranking.herokuapp.com" >> $GITHUB_ENV
      
      - name: Restore database
        uses: actions/download-artifact@v4
        with:
          name: database
          path: prisma/
        continue-on-error: true
      
      - name: Generate Prisma client
        run: npm run db:generate
      
      - name: Build
        run: npm run build
      
      - name: Sync favorites (via API)
        run: |
          # Start server in background
          npm start &
          SERVER_PID=$!
          
          # Wait for server
          sleep 5
          
          # Trigger sync
          curl -X POST http://localhost:3000/api/subteam/sync \
            -H "Content-Type: application/json" \
            || true
          
          # Stop server
          kill $SERVER_PID || true
      
      - name: Save database
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: database
          path: prisma/github-actions.db
          retention-days: 7
